// üìÅ src/pages/GradeDetailPage.jsx
import { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router";

export default function GradeDetailPage() {
  const { id } = useParams();
  const [data, setData] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    fetch(`${import.meta.env.VITE_API_URL}/v1/calculate/${id}`)
      .then((res) => res.json())
      .then((data) => setData(data))
      .catch((err) => {
        console.error("‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", err);
        alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
        navigate("/grade-history");
      });
  }, [id]);

  if (!data) return <div className="p-4">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>;

  return (
    <div className="p-4 max-w-2xl mx-auto space-y-4">
      <h1 className="text-2xl font-bold">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</h1>
      <p>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ß‡∏ô: {data.farmName}</p>
      <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {new Date(data.date).toLocaleDateString("th-TH")}</p>
      <p>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏£‡∏ß‡∏°: {data.totalWeight} ‡∏Å‡∏Å.</p>
      <p>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏•‡∏±‡∏Å: {data.basePrice} ‡∏ö‡∏≤‡∏ó/‡∏Å‡∏Å.</p>
      <p>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {data.remainingWeight} ‡∏Å‡∏Å.</p>
      <p>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: {data.netAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó</p>
      <p>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏Å‡∏Å.‡∏´‡∏•‡∏±‡∏á‡∏´‡∏±‡∏Å: {data.finalPrice.toFixed(2)} ‡∏ö‡∏≤‡∏ó/‡∏Å‡∏Å.</p>

      <h2 className="font-semibold mt-4">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏≠‡∏£‡πå</h2>
      <div className="space-y-2">
        {data.grades.map((g, i) => (
          <div key={i} className="border rounded p-2">
            <p>‡πÄ‡∏ö‡∏≠‡∏£‡πå: {g.name}</p>
            <p>‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å: {g.weight} ‡∏Å‡∏Å.</p>
            <p>‡∏£‡∏≤‡∏Ñ‡∏≤: {g.price} ‡∏ö‡∏≤‡∏ó/‡∏Å‡∏Å.</p>
          </div>
        ))}
      </div>

      <button className="btn btn-secondary mt-4" onClick={() => navigate("/grade-history")}>
        üîô ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
      </button>
    </div>
  );
}
